---
import PostLayout from '@layouts/PostLayout.astro';
import PostPage from '@components/PostPage.jsx';

const { slug } = Astro.params;
let data = {},
  post = {},
  posts = {},
  url = ''; // TODO: ASTRO URL is not working
try {
  const response = await fetch(import.meta.env.PUBLIC_DEGA_API_URL, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-Space': import.meta.env.PUBLIC_SPACE_ID,
      'X-Dega-API-Key': import.meta.env.PUBLIC_DEGA_API_KEY,
    },
    body: JSON.stringify({
      query: `
      query PostQuery($slug: String) {
        post(slug: $slug, include_pages: true) {
          published_date
          is_page
          description
          description_html
          excerpt
          id
          schemas
          slug
          status
          subtitle
          title
          updated_at
          users {
            email
            first_name
            last_name
            display_name
            slug
            id
          }
          tags {
            id
            name
            slug
            description
          }
          medium {
            alt_text
            id
            url
            dimensions
          }
          format {
            name
            slug
            id
            description
          }
          claims {
            checked_date
            claim_date
            claim_sources
            claimant {
              description
              id
              name
              slug
              tag_line
            }
            description
            id
            fact
            review_sources
            slug
            claim
            rating {
              description
              id
              name
              numeric_value
              slug
              medium {
                alt_text
                id
                url
                dimensions
              }
            }
          }
          categories {
            description
            created_at
            id
            name
            slug
            medium {
              alt_text
              id
              url
              dimensions
            }
          }
        }
        posts {
          nodes {
            published_date
            description
            excerpt
            id
            slug
            status
            subtitle
            title
            updated_at
            users {
              email
              first_name
              last_name
              display_name
              slug
              id
            }
            tags {
              id
              name
              slug
              description
            }
            medium {
              alt_text
              id
              url
              dimensions
            }
            format {
              name
              slug
              id
              description
            }
          }
        }
      }
    `,
      variables: {
        slug: slug,
      },
    }),
  });

  if (response.status !== 200) {
    throw new Error('Failed to fetch data. Response code: ' + response.status);
  }
  const json = await response.json();
  data = json.data;
  post = data.post;
  posts = data.posts;
} catch (e) {
  console.log(e);
}
---

<PostLayout post={post}>
  {post ? <PostPage post={post} posts={posts} client:load /> : null}
</PostLayout>
